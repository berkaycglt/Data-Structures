TEK YÖNLÜ BAĞLI LİSTEDE SONA EKLEME,BASTIRMA,ARAYA EKLEME VE SIRALI EKLEME FONKSİYONLARI

#include <stdlib.h>
#include <stdio.h>

struct dugum {
	int x;
	dugum*next;
};
typedef dugum node;

void bastir(node*r){ //bağlı listeyi ekrana yazdırma fonksiyonu
	while(r!=NULL){    //eleman varsa
#include <stdlib.h>
#include <stdio.h>

struct dugum {
	int x;
	dugum*next;
};
typedef dugum node;

void bastir(node*r){ //bağlı listeyi ekrana yazdırma fonksiyonu
	while(r!=NULL){    //eleman varsa
		printf("%d\n",r->x);
		r=r->next;
		}	
	}
	
void ekle(node*r,int x){    //sona elemen ekleme fonksiyonu
	while(r->next!=NULL){  //bu şart çok önemli nulla gelmeden durmalıyız
		r=r->next;
		
	}
	r->next=(node*)malloc(sizeof(node));
	r->next->x=x;
	r->next->next=NULL;
	
}
node * eklesirali(node*r,int x){
	if(r==NULL){ //eleman yoksa
		r=(node*)malloc(sizeof(node));
		r->x=x;
		r->next=NULL;
		return r;
	}
	if(r->x>x) {//ilk elemandan küçükse şartı,root değişir,başlangıçtan önceye ekleme
		node * temp;
		temp=(node*)malloc(sizeof(node));
		temp->x=x;
		temp->next=r;
		return temp;
}
	   //sona ekleme veya araya bir yere ekleme
	node * iter=r;
	while(iter->next!=NULL && iter->next->x<x){
		iter=iter->next;
		}
	node * temp=(node*)malloc(sizeof(node));
	temp->next=iter->next;
	iter->next=temp;
	temp->x=x;
	return r;		
				
	}			
	

	
 int main(){
 	node *root;
 	root=NULL;
 	root=eklesirali(root,10);
 	root=eklesirali(root,50);
 	root=eklesirali(root,100);
    root=eklesirali(root,70);
    root=eklesirali(root,80);
    root=eklesirali(root,14);
    root=eklesirali(root,121);
    root=eklesirali(root,1000);
	bastir(root);
 }